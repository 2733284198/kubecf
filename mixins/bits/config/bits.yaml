bits:
  # set ingress endpoint when 'use_registry_ingress' is set to true
  ingress:
    use: false
    endpoint: ~
    annotations: {}

  blobstore:
    serviceName: "singleton-blobstore"
    userName: "blobstore-user"
    secret:
      name: "var-blobstore-admin-users-password"
      passwordPath: "password"

  global:
    rootfs_version: v129.0.0
    images:
      bits_service: registry.suse.com/cap-staging/bits-service:bits-1.0.20-15.1.6.2.264-24.33
      rootfs_downloader: eirini/rootfs-downloader:2.32.0@sha256:6ae511688a27a453dcf31bf5a3bd7287ba99233e1586c7aeb78c87a18c68dbe4

  # resources:
  #   cpu: 800m
  #   memory: 150Mi


  # If set to false, the eirinifs will not be downloaded when the bits pod
  # is started. It should be used when the eirinifs is provided in some other way.
  download_eirinifs: false

  kube:
    external_ips: []

  services:
    loadbalanced: true
    nodePort: 31666

  secrets:
    BITS_SERVICE_SECRET: secret
    BITS_SERVICE_SIGNING_USER_PASSWORD: notpassword123
    BLOBSTORE_PASSWORD:  blobstore
    BITS_TLS_CRT: ~
    BITS_TLS_KEY: ~

  env:
    # Base domain of the SCF cluster.
    # Example: "my-scf-cluster.com"
    DOMAIN: 127.0.0.1.nip.io
    eirinifs_downloader_http_proxy: ~

  useExistingSecret: true
  tls_secret_name: bits-service-ssl
  tls_cert_name: certificate
  tls_key_name: private_key
  tls_ca_name: ca
