{{- if .Values.features.autoscaler.enabled -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ops-add-autoscaler
  labels:
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/name: {{ include "kubecf.fullname" . }}
    app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
    helm.sh/chart: {{ include "kubecf.chart" . }}
data:
  ops: |
    #add autoscaler related releases
    - type: replace
      path: /releases/-
      value:
        name: app-autoscaler
        version: "2.0.0"
        url: "https://bosh.io/d/github.com/cloudfoundry-incubator/app-autoscaler-release?v=2.0.0"
        sha1: "b2bda4bd9ff9b902fa6a6f3d37c13b681b3402b0"
    - type: replace
      path: /releases/-
      value:
        name: postgres
        version: "25"
        url: "https://bosh.io/d/github.com/cloudfoundry/postgres-release?v=25"
        sha1: "20929ee4b0c64fd97072a266311a6d00714124a7"
    #add autoscaler instance group
    - type: replace
      path: /instance_groups/-
      value:
        azs:
        - z1
        instances: 1
        jobs:
        - name: postgres
          properties:
            databases: &database
              connection_config: &databaseConnectionConfig
                connection_max_lifetime: 60s
                max_idle_connections: 10
                max_open_connections: 100
              databases:
              - name: autoscaler
                tag: default
              db_scheme: postgres
              port: 5432
              roles:
              - name: postgres
                password: ((database_password))
                tag: default
              sslmode: &sslmode verify-full
              tls: &database_tls
                ca: ((postgres_ca.certificate))
                certificate: ((postgres_server.certificate))
                private_key: ((postgres_server.private_key))
          release: postgres
        name: postgres_autoscaler
        networks:
        - name: default
        persistent_disk: 10240
        stemcell: default
        update:
          serial: true
        vm_type: small
    - type: replace
      path: /instance_groups/-
      value:
        azs:
        - z1
        instances: 1
        jobs:
        - name: scalingengine
          properties:
            autoscaler:
              cf:
                api: https://api.((system_domain))
                client_id: ((cf_client_id))
                grant_type: client_credentials
                secret: ((cf_client_secret))
                skip_ssl_validation: true
              policy_db:
                connection_config:
                  connection_max_lifetime: 60s
                  max_idle_connections: 10
                  max_open_connections: 100
                databases:
                - name: autoscaler
                  tag: default
                db_scheme: postgres
                port: 5432
                roles:
                - name: postgres
                  password: ((database_password))
                  tag: default
                sslmode: verify-full
                tls:
                  ca: ((postgres_ca.certificate))
                  certificate: ((postgres_server.certificate))
                  private_key: ((postgres_server.private_key))
              policy_db_connection_config:
                connection_max_lifetime: 60s
                max_idle_connections: 10
                max_open_connections: 100
              scalingengine:
                ca_cert: ((scalingengine_ca.certificate))
                defaultCoolDownSecs: 300
                health:
                  port: 6204
                http_client_timeout: 60s
                lockSize: 32
                logging:
                  level: info
                server:
                  port: 6104
                server_cert: ((scalingengine_server.certificate))
                server_key: ((scalingengine_server.private_key))
              scalingengine_db:
                connection_config:
                  connection_max_lifetime: 60s
                  max_idle_connections: 10
                  max_open_connections: 100
                databases:
                - name: autoscaler
                  tag: default
                db_scheme: postgres
                port: 5432
                roles:
                - name: postgres
                  password: ((database_password))
                  tag: default
                sslmode: verify-full
                tls:
                  ca: ((postgres_ca.certificate))
                  certificate: ((postgres_server.certificate))
                  private_key: ((postgres_server.private_key))
              scalingengine_db_connection_config:
                connection_max_lifetime: 60s
                max_idle_connections: 10
                max_open_connections: 100
              scheduler_db:
                connection_config:
                  connection_max_lifetime: 60s
                  max_idle_connections: 10
                  max_open_connections: 100
                databases:
                - name: autoscaler
                  tag: default
                db_scheme: postgres
                port: 5432
                roles:
                - name: postgres
                  password: ((database_password))
                  tag: default
                sslmode: verify-full
                tls:
                  ca: ((postgres_ca.certificate))
                  certificate: ((postgres_server.certificate))
                  private_key: ((postgres_server.private_key))
              scheduler_db_connection_config:
                connection_max_lifetime: 60s
                max_idle_connections: 10
                max_open_connections: 100
          release: app-autoscaler
        - name: scheduler
          properties:
            autoscaler:
              policy_db:
                connection_config:
                  connection_max_lifetime: 60s
                  max_idle_connections: 10
                  max_open_connections: 100
                databases:
                - name: autoscaler
                  tag: default
                db_scheme: postgres
                port: 5432
                roles:
                - name: postgres
                  password: ((database_password))
                  tag: default
                sslmode: verify-full
                tls:
                  ca: ((postgres_ca.certificate))
                  certificate: ((postgres_server.certificate))
                  private_key: ((postgres_server.private_key))
              scheduler:
                ca_cert: ((scheduler_ca.certificate))
                health:
                  port: 6202
                http_client_timeout: 60
                job_reschedule_interval_millisecond: 10000
                job_reschedule_maxcount: 6
                notification_reschedule_maxcount: 3
                port: 6102
                scaling_engine:
                  ca_cert: ((scalingengine_ca.certificate))
                  client_cert: ((scalingengine_client.certificate))
                  client_key: ((scalingengine_client.private_key))
                server_cert: ((scheduler_server.certificate))
                server_key: ((scheduler_server.private_key))
              scheduler_db:
                connection_config:
                  connection_max_lifetime: 60s
                  max_idle_connections: 10
                  max_open_connections: 100
                databases:
                - name: autoscaler
                  tag: default
                db_scheme: postgres
                port: 5432
                roles:
                - name: postgres
                  password: ((database_password))
                  tag: default
                sslmode: verify-full
                tls:
                  ca: ((postgres_ca.certificate))
                  certificate: ((postgres_server.certificate))
                  private_key: ((postgres_server.private_key))
          release: app-autoscaler
        - name: operator
          properties:
            autoscaler:
              appmetrics_db:
                connection_config:
                  connection_max_lifetime: 60s
                  max_idle_connections: 10
                  max_open_connections: 100
                databases:
                - name: autoscaler
                  tag: default
                db_scheme: postgres
                port: 5432
                roles:
                - name: postgres
                  password: ((database_password))
                  tag: default
                sslmode: verify-full
                tls:
                  ca: ((postgres_ca.certificate))
                  certificate: ((postgres_server.certificate))
                  private_key: ((postgres_server.private_key))
              appmetrics_db_connection_config:
                connection_max_lifetime: 60s
                max_idle_connections: 10
                max_open_connections: 100
              cf:
                api: https://api.((system_domain))
                client_id: ((cf_client_id))
                grant_type: client_credentials
                secret: ((cf_client_secret))
                skip_ssl_validation: true
              instancemetrics_db:
                connection_config:
                  connection_max_lifetime: 60s
                  max_idle_connections: 10
                  max_open_connections: 100
                databases:
                - name: autoscaler
                  tag: default
                db_scheme: postgres
                port: 5432
                roles:
                - name: postgres
                  password: ((database_password))
                  tag: default
                sslmode: verify-full
                tls:
                  ca: ((postgres_ca.certificate))
                  certificate: ((postgres_server.certificate))
                  private_key: ((postgres_server.private_key))
              instancemetrics_db_connection_config:
                connection_max_lifetime: 60s
                max_idle_connections: 10
                max_open_connections: 100
              lock_db:
                connection_config:
                  connection_max_lifetime: 60s
                  max_idle_connections: 10
                  max_open_connections: 100
                databases:
                - name: autoscaler
                  tag: default
                db_scheme: postgres
                port: 5432
                roles:
                - name: postgres
                  password: ((database_password))
                  tag: default
                sslmode: verify-full
                tls:
                  ca: ((postgres_ca.certificate))
                  certificate: ((postgres_server.certificate))
                  private_key: ((postgres_server.private_key))
              lock_db_connection_config:
                connection_max_lifetime: 60s
                max_idle_connections: 10
                max_open_connections: 100
              operator:
                app_sync_interval: 24h
                db_lock:
                  retry_interval: 5s
                  ttl: 15s
                health:
                  port: 6208
                http_client_timeout: 60s
                logging:
                  level: info
                scaling_engine:
                  ca_cert: ((scalingengine_ca.certificate))
                  client_cert: ((scalingengine_client.certificate))
                  client_key: ((scalingengine_client.private_key))
                  port: 6104
                scheduler:
                  ca_cert: ((scheduler_ca.certificate))
                  client_cert: ((scheduler_client.certificate))
                  client_key: ((scheduler_client.private_key))
                  port: 6102
              policy_db:
                connection_config:
                  connection_max_lifetime: 60s
                  max_idle_connections: 10
                  max_open_connections: 100
                databases:
                - name: autoscaler
                  tag: default
                db_scheme: postgres
                port: 5432
                roles:
                - name: postgres
                  password: ((database_password))
                  tag: default
                sslmode: verify-full
                tls:
                  ca: ((postgres_ca.certificate))
                  certificate: ((postgres_server.certificate))
                  private_key: ((postgres_server.private_key))
              policy_db_connection_config:
                connection_max_lifetime: 60s
                max_idle_connections: 10
                max_open_connections: 100
              scalingengine_db:
                connection_config:
                  connection_max_lifetime: 60s
                  max_idle_connections: 10
                  max_open_connections: 100
                databases:
                - name: autoscaler
                  tag: default
                db_scheme: postgres
                port: 5432
                roles:
                - name: postgres
                  password: ((database_password))
                  tag: default
                sslmode: verify-full
                tls:
                  ca: ((postgres_ca.certificate))
                  certificate: ((postgres_server.certificate))
                  private_key: ((postgres_server.private_key))
              scalingengine_db_connection_config:
                connection_max_lifetime: 60s
                max_idle_connections: 10
                max_open_connections: 100
          release: app-autoscaler
        name: asactors
        networks:
        - name: default
        stemcell: default
        update:
          max_in_flight: 1
          serial: true
        vm_type: minimal
    - type: replace
      path: /instance_groups/-
      value:
        azs:
        - z1
        instances: 1
        jobs:
        - name: metricsserver
          properties:
            autoscaler:
              instancemetrics_db:
                connection_config:
                  connection_max_lifetime: 60s
                  max_idle_connections: 10
                  max_open_connections: 100
                databases:
                - name: autoscaler
                  tag: default
                db_scheme: postgres
                port: 5432
                roles:
                - name: postgres
                  password: ((database_password))
                  tag: default
                sslmode: verify-full
                tls:
                  ca: ((postgres_ca.certificate))
                  certificate: ((postgres_server.certificate))
                  private_key: ((postgres_server.private_key))
              instancemetrics_db_connection_config:
                connection_max_lifetime: 60s
                max_idle_connections: 10
                max_open_connections: 100
              metricsserver:
                ca_cert: ((metricsserver_ca.certificate))
                collector:
                  collect_interval: 60s
                  envelope_channel_size: 1000
                  envelope_processor_count: 5
                  keep_alive_time: 60s
                  metric_cache_size_per_app: 1000
                  metric_channel_size: 1000
                  persist_metrics: true
                  port: 7103
                  refresh_interval: 60s
                  save_interval: 5s
                health:
                  port: 6303
                http_client_timeout: 60s
                logging:
                  level: info
                server:
                  port: 6103
                server_cert: ((metricsserver_server.certificate))
                server_key: ((metricsserver_server.private_key))
              policy_db:
                connection_config:
                  connection_max_lifetime: 60s
                  max_idle_connections: 10
                  max_open_connections: 100
                databases:
                - name: autoscaler
                  tag: default
                db_scheme: postgres
                port: 5432
                roles:
                - name: postgres
                  password: ((database_password))
                  tag: default
                sslmode: verify-full
                tls:
                  ca: ((postgres_ca.certificate))
                  certificate: ((postgres_server.certificate))
                  private_key: ((postgres_server.private_key))
              policy_db_connection_config:
                connection_max_lifetime: 60s
                max_idle_connections: 10
                max_open_connections: 100
          release: app-autoscaler
        - name: eventgenerator
          properties:
            autoscaler:
              appmetrics_db:
                connection_config:
                  connection_max_lifetime: 60s
                  max_idle_connections: 10
                  max_open_connections: 100
                databases:
                - name: autoscaler
                  tag: default
                db_scheme: postgres
                port: 5432
                roles:
                - name: postgres
                  password: ((database_password))
                  tag: default
                sslmode: verify-full
                tls:
                  ca: ((postgres_ca.certificate))
                  certificate: ((postgres_server.certificate))
                  private_key: ((postgres_server.private_key))
              appmetrics_db_connection_config:
                connection_max_lifetime: 60s
                max_idle_connections: 10
                max_open_connections: 100
              eventgenerator:
                aggregator:
                  aggregator_execute_interval: 40s
                  app_metric_channel_size: 1000
                  app_monitor_channel_size: 200
                  metric_poller_count: 20
                  policy_poller_interval: 60s
                  save_interval: 5s
                ca_cert: ((eventgenerator_ca.certificate))
                circuitBreaker:
                  back_off_initial_interval: 5m
                  back_off_max_interval: 120m
                  consecutive_failure_count: 5
                defaultBreachDurationSecs: 120
                defaultStatWindowSecs: 120
                evaluator:
                  evaluation_manager_execute_interval: 60s
                  evaluator_count: 20
                  trigger_array_channel_size: 200
                health:
                  port: 6205
                http_client_timeout: 60s
                logging:
                  level: info
                metricscollector:
                  ca_cert: ((metricsserver_ca.certificate))
                  client_cert: ((metricsserver_client.certificate))
                  client_key: ((metricsserver_client.private_key))
                  host: metricsserver.service.cf.internal
                  port: 6103
                scaling_engine:
                  ca_cert: ((scalingengine_ca.certificate))
                  client_cert: ((scalingengine_client.certificate))
                  client_key: ((scalingengine_client.private_key))
                  host: scalingengine.service.cf.internal
                  port: 6104
                server:
                  port: 6105
                server_cert: ((eventgenerator_server.certificate))
                server_key: ((eventgenerator_server.private_key))
              policy_db:
                connection_config:
                  connection_max_lifetime: 60s
                  max_idle_connections: 10
                  max_open_connections: 100
                databases:
                - name: autoscaler
                  tag: default
                db_scheme: postgres
                port: 5432
                roles:
                - name: postgres
                  password: ((database_password))
                  tag: default
                sslmode: verify-full
                tls:
                  ca: ((postgres_ca.certificate))
                  certificate: ((postgres_server.certificate))
                  private_key: ((postgres_server.private_key))
              policy_db_connection_config:
                connection_max_lifetime: 60s
                max_idle_connections: 10
                max_open_connections: 100
          release: app-autoscaler
        name: asmetrics
        networks:
        - name: default
        stemcell: default
        update:
          max_in_flight: 1
          serial: true
        vm_type: small
    - type: replace
      path: /instance_groups/-
      value:
        azs:
        - z1
        instances: 1
        jobs:
        - name: metricsgateway
          properties:
            autoscaler:
              metricsgateway:
                app_manager:
                  app_refresh_interval: 5s
                emitter:
                  buffer_size: 500
                  handshake_timeout: 1s
                  keep_alive_interval: 5s
                  max_close_retry_count: 3
                  max_setup_retry_count: 3
                  metricsserver_client:
                    ca_cert: ((metricsserver_ca.certificate))
                    cert: ((metricsserver_client.certificate))
                    key: ((metricsserver_client.private_key))
                  retry_delay: 1s
                envelop_chan_size: 1000
                health:
                  port: 6503
                logging:
                  level: info
                nozzle:
                  loggregator_rlp_tls:
                    cert: ((loggregator_tls_rlp.certificate))
                    key: ((loggregator_tls_rlp.private_key))
                    ca_cert: ((loggregator_ca.certificate))
                  rlp_addr: reverse-log-proxy.service.cf.internal:8082
                  shard_id: CF_AUTOSCALER
                nozzle_count: 3
              policy_db:
                connection_config:
                  connection_max_lifetime: 60s
                  max_idle_connections: 10
                  max_open_connections: 100
                databases:
                - name: autoscaler
                  tag: default
                db_scheme: postgres
                port: 5432
                roles:
                - name: postgres
                  password: ((database_password))
                  tag: default
                sslmode: verify-full
                tls:
                  ca: ((postgres_ca.certificate))
                  certificate: ((postgres_server.certificate))
                  private_key: ((postgres_server.private_key))
              policy_db_connection_config:
                connection_max_lifetime: 60s
                max_idle_connections: 10
                max_open_connections: 100
          release: app-autoscaler
        name: asnozzle
        networks:
        - name: default
        stemcell: default
        update:
          max_in_flight: 1
          serial: true
        vm_type: small
    - type: replace
      path: /instance_groups/-
      value:
        azs:
        - z1
        instances: 1
        jobs:
        - name: apiserver
          properties:
            autoscaler:
              api_server:
                ca_cert: ((apiserver_ca.certificate))
                cache_ttl: 600
                db_config:
                  idle_timeout: 60000
                  max_connections: 10
                  min_connections: 0
                eventgenerator:
                  ca_cert: ((eventgenerator_ca.certificate))
                  client_cert: ((eventgenerator_client.certificate))
                  client_key: ((eventgenerator_client.private_key))
                health:
                  port: 6200
                http_client_timeout: 60000
                metrics_collector:
                  ca_cert: ((metricsserver_ca.certificate))
                  client_cert: ((metricsserver_client.certificate))
                  client_key: ((metricsserver_client.private_key))
                  host: metricsserver.service.cf.internal
                  port: 6103
                port: 6100
                publicPort: 6106
                scaling_engine:
                  ca_cert: ((scalingengine_ca.certificate))
                  client_cert: ((scalingengine_client.certificate))
                  client_key: ((scalingengine_client.private_key))
                scheduler:
                  ca_cert: ((scheduler_ca.certificate))
                  client_cert: ((scheduler_client.certificate))
                  client_key: ((scheduler_client.private_key))
                server_cert: ((apiserver_server.certificate))
                server_key: ((apiserver_server.private_key))
                service_broker:
                  ca_cert: ((servicebroker_ca.certificate))
                  client_cert: ((servicebroker_client.certificate))
                  client_key: ((servicebroker_client.private_key))
                service_offering_enabled: false
              cf:
                api: https://api.((system_domain))
                client_id: ((cf_client_id))
                grant_type: client_credentials
                secret: ((cf_client_secret))
                skip_ssl_validation: true
              policy_db:
                connection_config:
                  connection_max_lifetime: 60s
                  max_idle_connections: 10
                  max_open_connections: 100
                databases:
                - name: autoscaler
                  tag: default
                db_scheme: postgres
                port: 5432
                roles:
                - name: postgres
                  password: ((database_password))
                  tag: default
                sslmode: verify-full
                tls:
                  ca: ((postgres_ca.certificate))
                  certificate: ((postgres_server.certificate))
                  private_key: ((postgres_server.private_key))
          release: app-autoscaler
        - name: servicebroker
          properties:
            autoscaler:
              binding_db:
                connection_config:
                  connection_max_lifetime: 60s
                  max_idle_connections: 10
                  max_open_connections: 100
                databases:
                - name: autoscaler
                  tag: default
                db_scheme: postgres
                port: 5432
                roles:
                - name: postgres
                  password: ((database_password))
                  tag: default
                sslmode: verify-full
                tls:
                  ca: ((postgres_ca.certificate))
                  certificate: ((postgres_server.certificate))
                  private_key: ((postgres_server.private_key))
              service_broker:
                api_server:
                  ca_cert: ((apiserver_ca.certificate))
                  client_cert: ((apiserver_client.certificate))
                  client_key: ((apiserver_client.private_key))
                ca_cert: ((servicebroker_ca.certificate))
                catalog:
                  services:
                  - bindable: true
                    description: Automatically increase or decrease the number of application
                      instances based on a policy you define.
                    id: autoscaler-guid
                    name: autoscaler
                    plans:
                    - description: This is the free service plan for the Auto-Scaling service.
                      id: autoscaler-free-plan-id
                      name: autoscaler-free-plan
                dashboard_redirect_uri: ""
                db_config:
                  idle_timeout: 60000
                  max_connections: 10
                  min_connections: 0
                enable_custom_metrics: true
                health:
                  port: 6201
                http_request_timeout: 5000
                password: ((autoscaler_service_broker_password))
                port: 6107
                public_ca_cert: ((servicebroker_public_ca.certificate))
                public_server_cert: ((servicebroker_public_server.certificate))
                public_server_key: ((servicebroker_public_server.private_key))
                publicPort: 6101
                server_cert: ((servicebroker_server.certificate))
                server_key: ((servicebroker_server.private_key))
                username: autoscaler_service_broker_user
          release: app-autoscaler
        - name: route_registrar
          consumes:
              nats: {from: nats}
          properties: 
            route_registrar:
              routes:
              - name: api_server_public_api
                port: 6106
                registration_interval: 20s
                tags:
                  component: api_server
                uris:
                - autoscaler.((system_domain))
              - name: autoscaler_service_broker
                port: 6101
                registration_interval: 20s
                tags:
                  component: autoscaler_service_broker
                uris:
                - autoscalerservicebroker.((system_domain))
          release: routing
        name: asapi
        networks:
        - name: default
        stemcell: default
        update:
          max_in_flight: 1
          serial: true
        vm_type: minimal
    # add autoscaler variables
    - type: replace
      path: /variables/-
      value:
        name: database_password
        type: password
    - type: replace
      path: /variables/-
      value:
        name: autoscaler_service_broker_password
        type: password
    - type: replace
      path: /variables/-
      value:
        name: scalingengine_ca
        options:
          common_name: scalingengineCA
          is_ca: true
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: scalingengine_server
        options:
          ca: scalingengine_ca
          common_name: scalingengine.service.cf.internal
          extended_key_usage:
          - client_auth
          - server_auth
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: scalingengine_client
        options:
          ca: scalingengine_ca
          common_name: scalingengine client
          extended_key_usage:
          - client_auth
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: eventgenerator_ca
        options:
          common_name: eventgeneratorCA
          is_ca: true
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: eventgenerator_server
        options:
          ca: eventgenerator_ca
          common_name: eventgenerator.service.cf.internal
          extended_key_usage:
          - client_auth
          - server_auth
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: eventgenerator_client
        options:
          ca: eventgenerator_ca
          common_name: eventgenerator client
          extended_key_usage:
          - client_auth
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: apiserver_ca
        options:
          common_name: apiserverCA
          is_ca: true
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: apiserver_server
        options:
          ca: apiserver_ca
          common_name: apiserver.service.cf.internal
          extended_key_usage:
          - client_auth
          - server_auth
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: apiserver_public_ca
        options:
          common_name: apiserverpublicCA
          is_ca: true
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: apiserver_public_server
        options:
          ca: apiserver_public_ca
          common_name: autoscaler.((system_domain))
          extended_key_usage:
          - client_auth
          - server_auth
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: apiserver_client
        options:
          ca: apiserver_ca
          common_name: apiserver client
          extended_key_usage:
          - client_auth
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: servicebroker_ca
        options:
          common_name: servicebrokerCA
          is_ca: true
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: servicebroker_server
        options:
          ca: servicebroker_ca
          common_name: servicebroker.service.cf.internal
          extended_key_usage:
          - client_auth
          - server_auth
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: servicebroker_client
        options:
          ca: servicebroker_ca
          common_name: servicebroker client
          extended_key_usage:
          - client_auth
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: servicebroker_public_ca
        options:
          common_name: servicebrokerCA
          is_ca: true
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: servicebroker_public_server
        options:
          ca: servicebroker_public_ca
          common_name: autoscalerservicebroker.((system_domain))
          extended_key_usage:
          - client_auth
          - server_auth
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: scheduler_ca
        options:
          common_name: schedulerCA
          is_ca: true
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: scheduler_server
        options:
          ca: scheduler_ca
          common_name: autoscalerscheduler.service.cf.internal
          extended_key_usage:
          - client_auth
          - server_auth
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: scheduler_client
        options:
          ca: scheduler_ca
          common_name: scheduler client
          extended_key_usage:
          - client_auth
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: metricsserver_ca
        options:
          common_name: metricsserverCA
          is_ca: true
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: metricsserver_server
        options:
          alternative_names:
          - metricsserver.service.cf.internal
          - '*.asmetrics.default.app-autoscaler.bosh'
          ca: metricsserver_ca
          common_name: metricsserver.service.cf.internal
          extended_key_usage:
          - client_auth
          - server_auth
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: metricsserver_client
        options:
          ca: metricsserver_ca
          common_name: metricsserver client
          extended_key_usage:
          - client_auth
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: postgres_ca
        options:
          common_name: postgresCA
          is_ca: true
        type: certificate
    - type: replace
      path: /variables/-
      value:
        name: postgres_server
        options:
          ca: postgres_ca
          common_name: autoscalerpostgres.service.cf.internal
          extended_key_usage:
          - client_auth
          - server_auth
        type: certificate
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ops-autoscaler-bpm
  labels:
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/name: {{ include "kubecf.fullname" . }}
    app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
    helm.sh/chart: {{ include "kubecf.chart" . }}
data:
  ops: |
    - type: replace
      path: /instance_groups/name=asactors/jobs/name=scalingengine/properties/quarks?
      value:
        ports:
        - name: scalingengine
          protocol: TCP
          internal: 6104
        - name: sehealthport
          portocol: TCP
          internal: 6204
        bpm:
          processes:
            - name: scalingengine
              executable: /bin/bash
              args:
              - -c
              - |
                /var/vcap/jobs/scalingengine/bin/scalingengine_ctl start
        run:
          healthcheck:
            scalingengine:
              readiness:
                exec:
                  command:
                  - curl
                  - --fail
                  - --head
                  - http://127.0.0.1:6204
    - type: replace
      path: /instance_groups/name=asactors/jobs/name=scheduler/properties/quarks?
      value:
        ports:
        - name: scheduler
          protocol: TCP
          internal: 6102
        - name: sdhealthport
          portocol: TCP
          internal: 6202
        bpm:
          processes:
            - name: scheduler
              executable: /bin/bash
              args:
              - -c
              - |
                /var/vcap/jobs/scheduler/bin/scheduler start
        run:
          healthcheck:
            scheduler:
              readiness:
                exec:
                  command:
                  - curl
                  - --fail
                  - --head
                  - http://127.0.0.1:6202
    - type: replace
      path: /instance_groups/name=asactors/jobs/name=operator/properties/quarks?
      value:
        ports:
        - name: ophealthport
          protocol: TCP
          internal: 6208
        bpm:
          processes:
            - name: operator
              executable: /bin/bash
              args:
              - -c
              - |
                /var/vcap/jobs/operator/bin/operator_ctl start
        run:
          healthcheck:
            operator:
              readiness:
                exec:
                  command:
                  - curl
                  - --fail
                  - --head
                  - http://127.0.0.1:6208
    - type: replace
      path: /instance_groups/name=asmetrics/jobs/name=metricsserver/properties/quarks?
      value:
        ports:
        - name: metrics
          protocol: TCP
          internal: 6103
        - name: mscollector
          protocol: TCP
          internal: 7103
        - name: mshealthport
          portocol: TCP
          internal: 6303
        bpm:
          processes:
            - name: metricsserver
              executable: /bin/bash
              args:
              - -c
              - |
                /var/vcap/jobs/metricsserver/bin/metricsserver_ctl start
        run:
          healthcheck:
            metricsserver:
              readiness:
                exec:
                  command:
                  - curl
                  - --fail
                  - --head
                  - http://127.0.0.1:6303
    - type: replace
      path: /instance_groups/name=asmetrics/jobs/name=eventgenerator/properties/quarks?
      value:
        ports:
        - name: eventgen
          protocol: TCP
          internal: 6105
        - name: eghealthport
          portocol: TCP
          internal: 6205
        bpm:
          processes:
            - name: eventgenerator
              executable: /bin/bash
              args:
              - -c
              - |
                /var/vcap/jobs/eventgenerator/bin/eventgenerator_ctl start
        run:
          healthcheck:
            eventgenerator:
              readiness:
                exec:
                  command:
                  - curl
                  - --fail
                  - --head
                  - http://127.0.0.1:6205
    - type: replace
      path: /instance_groups/name=asnozzle/jobs/name=metricsgateway/properties/quarks?
      value:
        ports:
        - name: mghealthport
          portocol: TCP
          internal: 6503
        bpm:
          processes:
            - name: metricsgateway
              executable: /var/vcap/packages/metricsgateway/metricsgateway
              args:
              - -c 
              - /var/vcap/jobs/metricsgateway/config/metricsgateway.yml
        run:
          healthcheck:
            metricsgateway:
              readiness:
                exec:
                  command:
                  - curl
                  - --fail
                  - --head
                  - http://127.0.0.1:6503
    - type: replace
      path: /instance_groups/name=asapi/jobs/name=apiserver/properties/quarks?
      value:
        ports:
        - name: apiserver
          protocol: TCP
          internal: 6100
        - name: apihealthport
          portocol: TCP
          internal: 6200
        - name: apipubport
          portocol: TCP
          internal: 6106
        bpm:
          processes:
            - name: apiserver
              executable: /bin/bash
              args:
              - -c
              - |
                /var/vcap/jobs/apiserver/bin/apiserver start
        run:
          healthcheck:
            apiserver:
              readiness:
                exec:
                  command:
                  - curl
                  - --fail
                  - --head
                  - http://127.0.0.1:6200
    - type: replace
      path: /instance_groups/name=asapi/jobs/name=servicebroker/properties/quarks?
      value:
        bpm:
          processes:
            - name: servicebroker
              executable: /bin/bash
              args:
              - -c
              - |
                /var/vcap/jobs/servicebroker/bin/servicebroker start      
    - type: replace
      path: /instance_groups/name=postgres_autoscaler/jobs/name=postgres/properties/quarks?
      value:
        ports:
        - name: "postgres"
          protocol: "TCP"
          internal: 5432
        pre_render_scripts:
          jobs:
          - |
            sed -i "s/sysctl/#sysctl/g" /var/vcap/all-releases/jobs-src/postgres/postgres/templates/pre-start.sh.erb
        bpm:
          processes:
            - name: postgres
              persistent_disk: true
              executable: /bin/sh
              args:
              - -c
              - | 
                # set -x
                source /var/vcap/jobs/postgres/bin/pgconfig.sh
                source /var/vcap/jobs/postgres/bin/utils.sh
                wait_for_file() {
                  local file_path="$1"
                  local timeout="${2:-30}"
                  until [[ -f "${file_path}" ]] || [[ "$timeout" == "0" ]]; do sleep 1; timeout=$(expr $timeout - 1); done
                  if [[ "${timeout}" == 0 ]]; then return 1; fi
                    return 0
                }
                cp /var/vcap/jobs/postgres/config/postgresql.conf /var/vcap/jobs/postgres/config/pg_hba.conf /var/vcap/jobs/postgres/config/pg_ident.conf /var/vcap/store/postgres/postgres-9.6.6
                su - vcap -c "/var/vcap/packages/postgres-9.6.6/bin/pg_ctl -D /var/vcap/store/postgres/postgres-9.6.6 -l /var/vcap/sys/log/postgres/postgres.log start"
                sleep 300
                /var/vcap/packages/postgres-9.6.6/bin/psql -U vcap -d postgres -f /var/vcap/jobs/postgres/config/roles.sql
                /var/vcap/packages/postgres-9.6.6/bin/psql -U vcap -d postgres -c 'create database autoscaler;'
                pid_file="/var/vcap/sys/run/postgres/postgres.pid"
                log_file="/var/vcap/sys/log/postgres/postgres.log"
                wait_for_file "${pid_file}" || {
                  echo "${pid_file} did not get created"
                  exit 1
                }
                wait_for_file "${log_file}" || {
                  echo "${log_file} did not get created"
                  exit 1
                }
                tail \
                  --pid $(cat "${pid_file}") \
                  --follow "${log_file}"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ops-autoscaler-bosh-dns
  labels:
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/name: {{ include "kubecf.fullname" . }}
    app.kubernetes.io/version: {{ default .Chart.Version .Chart.AppVersion | quote }}
    helm.sh/chart: {{ include "kubecf.chart" . }}
data:
  ops: |
    # add autoscaler bosh dns
    - type: replace
      path: /addons/name=bosh-dns-aliases/jobs/name=bosh-dns-aliases/properties/aliases/-
      value:
        domain: autoscalerpostgres.service.cf.internal
        targets:
        - deployment: cf
          domain: bosh
          instance_group: postgres_autoscaler
          network: default
          query: '*'
    - type: replace
      path: /addons/name=bosh-dns-aliases/jobs/name=bosh-dns-aliases/properties/aliases/-
      value:
        domain: apiserver.service.cf.internal
        targets:
        - deployment: cf
          domain: bosh
          instance_group: asapi
          network: default
          query: '*'
    - type: replace
      path: /addons/name=bosh-dns-aliases/jobs/name=bosh-dns-aliases/properties/aliases/-
      value:
        domain: autoscalerscheduler.service.cf.internal
        targets:
        - deployment: cf
          domain: bosh
          instance_group: asactors
          network: default
          query: '*'
    - type: replace
      path: /addons/name=bosh-dns-aliases/jobs/name=bosh-dns-aliases/properties/aliases/-
      value:
        domain: servicebroker.service.cf.internal
        targets:
        - deployment: cf
          domain: bosh
          instance_group: asapi
          network: default
          query: '*'
    - type: replace
      path: /addons/name=bosh-dns-aliases/jobs/name=bosh-dns-aliases/properties/aliases/-
      value:
        domain: eventgenerator.service.cf.internal
        targets:
        - deployment: cf
          domain: bosh
          instance_group: asmetrics
          network: default
          query: '*'
    - type: replace
      path: /addons/name=bosh-dns-aliases/jobs/name=bosh-dns-aliases/properties/aliases/-
      value:
       domain: scalingengine.service.cf.internal
       targets:
        - deployment: cf
          domain: bosh
          instance_group: asactors
          network: default
          query: '*'
    - type: replace
      path: /addons/name=bosh-dns-aliases/jobs/name=bosh-dns-aliases/properties/aliases/-
      value:
        domain: metricsgateway.service.cf.internal
        targets:
        - deployment: cf
          domain: bosh
          instance_group: asnozzle
          network: default
          query: '*'
    - type: replace
      path: /addons/name=bosh-dns-aliases/jobs/name=bosh-dns-aliases/properties/aliases/-
      value:
        domain: metricsserver.service.cf.internal
        targets:
        - deployment: cf
          domain: bosh
          instance_group: asmetrics
          network: default
          query: '*'
    
    - type: replace
      path: /instance_groups/name=asnozzle/jobs/name=metricsgateway/properties/autoscaler/metricsgateway/nozzle/rlp_addr?
      value: {{ .Values.deployment_name }}-log-api:8082
    - type: replace
      path: /variables/name=eventgenerator_server/options?/alternative_names
      value: ["{{ .Values.deployment_name }}-asmetrics","*.{{ .Values.deployment_name }}-asmetrics","{{ .Values.deployment_name }}-asmetrics-0","{{ .Values.deployment_name }}-asmetrics-1"]
    - type: replace
      path: /variables/name=metricsserver_server/options?/alternative_names
      value: ["{{ .Values.deployment_name }}-asmetrics","*.{{ .Values.deployment_name }}-asmetrics","{{ .Values.deployment_name }}-asmetrics-0","{{ .Values.deployment_name }}-asmetrics-1"] 
    
    - type: remove
      path: /releases/name=app-autoscaler
    - type: remove
      path: /releases/name=postgres
    - type: replace
      path: /releases/-
      value:
        name: app-autoscaler
        version: "2.0.0"
        url: docker.io/aqan
        stemcell:
          os: opensuse-42.3
          version: 38.g82067a9-30.95-7.0.0_346.ge9dd9ff3
    - type: replace
      path: /releases/-
      value:
        name: postgres
        version: "25"
        url: docker.io/aqan
        stemcell:
          os: opensuse-42.3
          version: 38.g82067a9-30.95-7.0.0_346.ge9dd9ff3

{{- end }}